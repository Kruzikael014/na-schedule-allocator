name : CI/CD - Backend Server Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'server/**' 
# Trigger -> When dev push to branch main, and if only there are any changes on folder server

env:
  REGISTRY: registry.kube.slc.net
  IMAGE_NAME: na-schedule-allocator-backend
  
# env -> define variable data non private biar bisa direuse gausa ketik berulang"

# kumpulan dari step yang bakal dijalanin (bisa lebih dari 1)
jobs:
  # job pertama dengan nama build_push_deploy
  build_push_deploy:
    name: Build, Push, & Deploy Image to Registry # nama yang lebih deskriptif
    runs-on: self-hosted # dijalanin dimana, runner kah, linux-latest kah, ubuntu-latest kah

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # community defined function, buat checkout codingan

      - name: Login to Container Registry
        uses: docker/login-action@v3 # community defined function, buat login ke image registry 
        with: # dia prlu beberapa info yang perlu dikasih yaitu hostnya, dan credential buat login ke 
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
        
      - name: Build using Docker
        run: |
          docker build -t ${{ env.REGISTRY }}/slc/${{ env.IMAGE_NAME }}:${{ github.sha }} -f ./server/Dockerfile ./server/

      - name: Push to registry using Docker
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

          docker tag ${{ env.REGISTRY }}/slc/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      - name: Inject Kubeconfig and Setup Kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_STAGING }}" > $HOME/kubeconfig.yaml
          export KUBECONFIG=$HOME/kubeconfig.yaml

          kubectl cluster-info

          # Install Kubectl (udah gaperlu karena kubeserver == runner server)
          # curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          # sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Deploy New Image to K8s Cluster
        run: |
          export KUBECONFIG=$HOME/kubeconfig.yaml

          NEW_IMAGE_TAG="${{ env.REGISTRY }}/slc/${{ env.IMAGE_NAME }}:${{ github.sha }}"

          # kubectl apply -f k8s/backend-deployment.yaml # better manual karena set image deployment/<deployment_name> itu lebih cepat dibandingkan apply, dengan syarat object sudah harus ada terlebih dahulu

          kubectl apply -f k8s/backend-service.yaml
          
          kubectl set image deployment/na-schedule-allocator-backend backend-container=$NEW_IMAGE_TAG

          kubectl rollout status deployment/na-schedule-allocator-backend